
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVIDEMODULOrightEXPONENTASSIGN DIVIDE EXPONENT ID INTEGER LPAREN MINUS MODULO MULTIPLY PLUS REAL RPARENstatement : ID ASSIGN expressionstatement : expressionexpression : expression PLUS expression\n     expression : expression MINUS expression\n     expression : expression MULTIPLY expression\n     expression : expression DIVIDE expression\n     expression : expression MODULO expression\n     expression : expression EXPONENT expressionexpression : MINUS expression\n     expression : PLUS expressionexpression : LPAREN expression RPARENexpression : INTEGER\n     expression : REALexpression : ID'
    
_lr_action_items = {'ID':([0,4,5,6,9,10,11,12,13,14,15,],[2,17,17,17,17,17,17,17,17,17,17,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,],[5,-14,11,5,5,5,-12,-13,5,5,5,5,5,5,5,-10,-14,-9,11,11,-3,-4,-5,-6,-7,-8,-11,]),'PLUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,],[4,-14,10,4,4,4,-12,-13,4,4,4,4,4,4,4,-10,-14,-9,10,10,-3,-4,-5,-6,-7,-8,-11,]),'LPAREN':([0,4,5,6,9,10,11,12,13,14,15,],[6,6,6,6,6,6,6,6,6,6,6,]),'INTEGER':([0,4,5,6,9,10,11,12,13,14,15,],[7,7,7,7,7,7,7,7,7,7,7,]),'REAL':([0,4,5,6,9,10,11,12,13,14,15,],[8,8,8,8,8,8,8,8,8,8,8,]),'$end':([1,2,3,7,8,16,17,18,20,21,22,23,24,25,26,27,],[0,-14,-2,-12,-13,-10,-14,-9,-1,-3,-4,-5,-6,-7,-8,-11,]),'ASSIGN':([2,],[9,]),'MULTIPLY':([2,3,7,8,16,17,18,19,20,21,22,23,24,25,26,27,],[-14,12,-12,-13,12,-14,12,12,12,12,12,-5,-6,-7,-8,-11,]),'DIVIDE':([2,3,7,8,16,17,18,19,20,21,22,23,24,25,26,27,],[-14,13,-12,-13,13,-14,13,13,13,13,13,-5,-6,-7,-8,-11,]),'MODULO':([2,3,7,8,16,17,18,19,20,21,22,23,24,25,26,27,],[-14,14,-12,-13,14,-14,14,14,14,14,14,-5,-6,-7,-8,-11,]),'EXPONENT':([2,3,7,8,16,17,18,19,20,21,22,23,24,25,26,27,],[-14,15,-12,-13,15,-14,15,15,15,15,15,15,15,15,15,-11,]),'RPAREN':([7,8,16,17,18,19,21,22,23,24,25,26,27,],[-12,-13,-10,-14,-9,27,-3,-4,-5,-6,-7,-8,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,4,5,6,9,10,11,12,13,14,15,],[3,16,18,19,20,21,22,23,24,25,26,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> ID ASSIGN expression','statement',3,'p_statement_assign','hmwk_02.py',74),
  ('statement -> expression','statement',1,'p_statement_expr','hmwk_02.py',79),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','hmwk_02.py',85),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','hmwk_02.py',86),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binop','hmwk_02.py',87),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','hmwk_02.py',88),
  ('expression -> expression MODULO expression','expression',3,'p_expression_binop','hmwk_02.py',89),
  ('expression -> expression EXPONENT expression','expression',3,'p_expression_binop','hmwk_02.py',90),
  ('expression -> MINUS expression','expression',2,'p_expression_unop','hmwk_02.py',102),
  ('expression -> PLUS expression','expression',2,'p_expression_unop','hmwk_02.py',103),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','hmwk_02.py',109),
  ('expression -> INTEGER','expression',1,'p_expression_number','hmwk_02.py',114),
  ('expression -> REAL','expression',1,'p_expression_number','hmwk_02.py',115),
  ('expression -> ID','expression',1,'p_expression_name','hmwk_02.py',119),
]
