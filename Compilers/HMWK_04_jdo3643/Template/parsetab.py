
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftOR_LOGICALleftAND_LOGICALleftOR_BITWISEleftXOR_BITWISEleftAND_BITWISEleftEQUALNOT_EQUALleftLESSLESS_EQUALGREATERGREATER_EQUALleftRANDOMleftPLUSMINUSleftMULTIPLYDIVIDEMODULUSleftEXPONENTIATIONrightUMINUSUPLUSNOT_BITWISENOT_LOGICALleftFACTORIALSQUARE_ROOTAND_BITWISE AND_LOGICAL ASSIGN BREAK COMMA CONTINUE DIVIDE DO ELSE END EQUAL EXIT EXPONENTIATION FACTORIAL GREATER GREATER_EQUAL ID IF INT INTEGER_LITERAL LESS LESS_EQUAL LPAREN MINUS MODULUS MULTIPLY NOT_BITWISE NOT_EQUAL NOT_LOGICAL OR_BITWISE OR_LOGICAL PLUS RANDOM READ REAL REAL_LITERAL RPAREN SEMICOLON SQUARE_ROOT STRING_LITERAL THEN WHILE WRITE XOR_BITWISEprogram : statement_liststatement : ID ASSIGN expressionstatement : BREAKstatement : CONTINUEstatement : INT ID \n               | REAL IDstatement : INT ID ASSIGN expression\n               | REAL ID ASSIGN expressionstatement : EXITstatement : EXIT expressionstatement : IF expression THEN statement_list END IFstatement : IF expression THEN statement_list ELSE statement_list END IFstatement : READ LPAREN id_list RPARENstatement : WHILE expression DO statement_list END WHILEstatement : WRITE LPAREN expression_list RPARENexpression : expression AND_BITWISE expression\n                | expression AND_LOGICAL expression\n                | expression DIVIDE expression\n                | expression EQUAL expression\n                | expression EXPONENTIATION expression\n                | expression GREATER expression\n                | expression GREATER_EQUAL expression\n                | expression LESS expression\n                | expression LESS_EQUAL expression\n                | expression MINUS expression\n                | expression MODULUS expression\n                | expression MULTIPLY expression\n                | expression NOT_EQUAL expression\n                | expression OR_BITWISE expression\n                | expression OR_LOGICAL expression\n                | expression PLUS expression\n                | expression RANDOM expression\n                | expression XOR_BITWISE expressionexpression : MINUS expression %prec UMINUS\n                | PLUS expression %prec UPLUS\n                | NOT_BITWISE expression\n                | NOT_LOGICAL expressionexpression : expression FACTORIAL\n                | expression SQUARE_ROOTexpression : LPAREN expression RPARENexpression : INTEGER_LITERAL\n                | REAL_LITERAL\n                | STRING_LITERALexpression : IDexpression_list : epsilonexpression_list : expression_list_Bexpression_list_B : expressionexpression_list_B : expression_list_B COMMA expressionid_list : IDid_list : id_list COMMA IDstatement_list : epsilonstatement_list : statement_list_Cstatement_list_C : statementstatement_list_C : statement_list_C SEMICOLON statementepsilon :'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,7,8,11,18,19,20,26,27,28,29,34,35,56,57,58,59,60,61,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,96,103,105,107,],[-55,0,-1,-51,-52,-53,-3,-4,-9,-5,-6,-10,-41,-42,-43,-44,-54,-2,-38,-39,-34,-35,-36,-37,-7,-8,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-40,-13,-15,-11,-14,-12,]),'ID':([0,9,10,11,12,14,16,17,21,22,23,24,25,31,33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,66,94,97,99,],[6,18,19,29,29,29,6,29,29,29,29,29,29,65,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,6,6,100,29,6,]),'BREAK':([0,16,63,66,99,],[7,7,7,7,7,]),'CONTINUE':([0,16,63,66,99,],[8,8,8,8,8,]),'INT':([0,16,63,66,99,],[9,9,9,9,9,]),'REAL':([0,16,63,66,99,],[10,10,10,10,10,]),'EXIT':([0,16,63,66,99,],[11,11,11,11,11,]),'IF':([0,16,63,66,98,99,106,],[12,12,12,12,103,12,107,]),'READ':([0,16,63,66,99,],[13,13,13,13,13,]),'WHILE':([0,16,63,66,99,101,],[14,14,14,14,14,105,]),'WRITE':([0,16,63,66,99,],[15,15,15,15,15,]),'END':([3,4,5,7,8,11,18,19,20,26,27,28,29,34,35,56,57,58,59,60,61,63,66,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,99,103,104,105,107,],[-51,-52,-53,-3,-4,-9,-5,-6,-10,-41,-42,-43,-44,-54,-2,-38,-39,-34,-35,-36,-37,-55,-55,-7,-8,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-40,98,-13,101,-15,-55,-11,106,-14,-12,]),'ELSE':([3,4,5,7,8,11,18,19,20,26,27,28,29,34,35,56,57,58,59,60,61,63,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,96,103,105,107,],[-51,-52,-53,-3,-4,-9,-5,-6,-10,-41,-42,-43,-44,-54,-2,-38,-39,-34,-35,-36,-37,-55,-7,-8,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-40,99,-13,-15,-11,-14,-12,]),'SEMICOLON':([4,5,7,8,11,18,19,20,26,27,28,29,34,35,56,57,58,59,60,61,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,96,103,105,107,],[16,-53,-3,-4,-9,-5,-6,-10,-41,-42,-43,-44,-54,-2,-38,-39,-34,-35,-36,-37,-7,-8,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-40,-13,-15,-11,-14,-12,]),'ASSIGN':([6,18,19,],[17,36,37,]),'MINUS':([11,12,14,17,20,21,22,23,24,25,26,27,28,29,30,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,97,102,],[21,21,21,21,47,21,21,21,21,21,-41,-42,-43,-44,47,47,21,47,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-38,-39,-34,-35,-36,-37,47,47,47,47,47,47,-18,47,-20,47,47,47,47,-25,-26,-27,47,47,47,-31,47,47,-40,21,47,]),'PLUS':([11,12,14,17,20,21,22,23,24,25,26,27,28,29,30,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,97,102,],[22,22,22,22,53,22,22,22,22,22,-41,-42,-43,-44,53,53,22,53,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-38,-39,-34,-35,-36,-37,53,53,53,53,53,53,-18,53,-20,53,53,53,53,-25,-26,-27,53,53,53,-31,53,53,-40,22,53,]),'NOT_BITWISE':([11,12,14,17,21,22,23,24,25,33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,97,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'NOT_LOGICAL':([11,12,14,17,21,22,23,24,25,33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,97,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'LPAREN':([11,12,13,14,15,17,21,22,23,24,25,33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,97,],[25,25,31,25,33,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'INTEGER_LITERAL':([11,12,14,17,21,22,23,24,25,33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,97,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'REAL_LITERAL':([11,12,14,17,21,22,23,24,25,33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,97,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'STRING_LITERAL':([11,12,14,17,21,22,23,24,25,33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,97,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'AND_BITWISE':([20,26,27,28,29,30,32,35,56,57,58,59,60,61,62,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,102,],[38,-41,-42,-43,-44,38,38,38,-38,-39,-34,-35,-36,-37,38,38,38,38,-16,38,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,38,38,-31,-32,38,-40,38,]),'AND_LOGICAL':([20,26,27,28,29,30,32,35,56,57,58,59,60,61,62,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,102,],[39,-41,-42,-43,-44,39,39,39,-38,-39,-34,-35,-36,-37,39,39,39,39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,39,-31,-32,-33,-40,39,]),'DIVIDE':([20,26,27,28,29,30,32,35,56,57,58,59,60,61,62,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,102,],[40,-41,-42,-43,-44,40,40,40,-38,-39,-34,-35,-36,-37,40,40,40,40,40,40,-18,40,-20,40,40,40,40,40,-26,-27,40,40,40,40,40,40,-40,40,]),'EQUAL':([20,26,27,28,29,30,32,35,56,57,58,59,60,61,62,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,102,],[41,-41,-42,-43,-44,41,41,41,-38,-39,-34,-35,-36,-37,41,41,41,41,41,41,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,41,41,-31,-32,41,-40,41,]),'EXPONENTIATION':([20,26,27,28,29,30,32,35,56,57,58,59,60,61,62,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,102,],[42,-41,-42,-43,-44,42,42,42,-38,-39,-34,-35,-36,-37,42,42,42,42,42,42,42,42,-20,42,42,42,42,42,42,42,42,42,42,42,42,42,-40,42,]),'GREATER':([20,26,27,28,29,30,32,35,56,57,58,59,60,61,62,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,102,],[43,-41,-42,-43,-44,43,43,43,-38,-39,-34,-35,-36,-37,43,43,43,43,43,43,-18,43,-20,-21,-22,-23,-24,-25,-26,-27,43,43,43,-31,-32,43,-40,43,]),'GREATER_EQUAL':([20,26,27,28,29,30,32,35,56,57,58,59,60,61,62,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,102,],[44,-41,-42,-43,-44,44,44,44,-38,-39,-34,-35,-36,-37,44,44,44,44,44,44,-18,44,-20,-21,-22,-23,-24,-25,-26,-27,44,44,44,-31,-32,44,-40,44,]),'LESS':([20,26,27,28,29,30,32,35,56,57,58,59,60,61,62,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,102,],[45,-41,-42,-43,-44,45,45,45,-38,-39,-34,-35,-36,-37,45,45,45,45,45,45,-18,45,-20,-21,-22,-23,-24,-25,-26,-27,45,45,45,-31,-32,45,-40,45,]),'LESS_EQUAL':([20,26,27,28,29,30,32,35,56,57,58,59,60,61,62,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,102,],[46,-41,-42,-43,-44,46,46,46,-38,-39,-34,-35,-36,-37,46,46,46,46,46,46,-18,46,-20,-21,-22,-23,-24,-25,-26,-27,46,46,46,-31,-32,46,-40,46,]),'MODULUS':([20,26,27,28,29,30,32,35,56,57,58,59,60,61,62,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,102,],[48,-41,-42,-43,-44,48,48,48,-38,-39,-34,-35,-36,-37,48,48,48,48,48,48,-18,48,-20,48,48,48,48,48,-26,-27,48,48,48,48,48,48,-40,48,]),'MULTIPLY':([20,26,27,28,29,30,32,35,56,57,58,59,60,61,62,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,102,],[49,-41,-42,-43,-44,49,49,49,-38,-39,-34,-35,-36,-37,49,49,49,49,49,49,-18,49,-20,49,49,49,49,49,-26,-27,49,49,49,49,49,49,-40,49,]),'NOT_EQUAL':([20,26,27,28,29,30,32,35,56,57,58,59,60,61,62,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,102,],[50,-41,-42,-43,-44,50,50,50,-38,-39,-34,-35,-36,-37,50,50,50,50,50,50,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,50,50,-31,-32,50,-40,50,]),'OR_BITWISE':([20,26,27,28,29,30,32,35,56,57,58,59,60,61,62,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,102,],[51,-41,-42,-43,-44,51,51,51,-38,-39,-34,-35,-36,-37,51,51,51,51,-16,51,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,51,-31,-32,-33,-40,51,]),'OR_LOGICAL':([20,26,27,28,29,30,32,35,56,57,58,59,60,61,62,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,102,],[52,-41,-42,-43,-44,52,52,52,-38,-39,-34,-35,-36,-37,52,52,52,52,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-40,52,]),'RANDOM':([20,26,27,28,29,30,32,35,56,57,58,59,60,61,62,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,102,],[54,-41,-42,-43,-44,54,54,54,-38,-39,-34,-35,-36,-37,54,54,54,54,54,54,-18,54,-20,54,54,54,54,-25,-26,-27,54,54,54,-31,-32,54,-40,54,]),'XOR_BITWISE':([20,26,27,28,29,30,32,35,56,57,58,59,60,61,62,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,102,],[55,-41,-42,-43,-44,55,55,55,-38,-39,-34,-35,-36,-37,55,55,55,55,-16,55,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,55,55,-31,-32,-33,-40,55,]),'FACTORIAL':([20,26,27,28,29,30,32,35,56,57,58,59,60,61,62,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,102,],[56,-41,-42,-43,-44,56,56,56,-38,-39,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-40,56,]),'SQUARE_ROOT':([20,26,27,28,29,30,32,35,56,57,58,59,60,61,62,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,102,],[57,-41,-42,-43,-44,57,57,57,-38,-39,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-40,57,]),'THEN':([26,27,28,29,30,56,57,58,59,60,61,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,],[-41,-42,-43,-44,63,-38,-39,-34,-35,-36,-37,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-40,]),'DO':([26,27,28,29,32,56,57,58,59,60,61,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,],[-41,-42,-43,-44,66,-38,-39,-34,-35,-36,-37,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-40,]),'RPAREN':([26,27,28,29,33,56,57,58,59,60,61,62,64,65,67,68,69,70,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,100,102,],[-41,-42,-43,-44,-55,-38,-39,-34,-35,-36,-37,91,93,-49,96,-45,-46,-47,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-40,-50,-48,]),'COMMA':([26,27,28,29,56,57,58,59,60,61,64,65,69,70,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,100,102,],[-41,-42,-43,-44,-38,-39,-34,-35,-36,-37,94,-49,97,-47,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-40,-50,-48,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,63,66,99,],[2,92,95,104,]),'epsilon':([0,33,63,66,99,],[3,68,3,3,3,]),'statement_list_C':([0,63,66,99,],[4,4,4,4,]),'statement':([0,16,63,66,99,],[5,34,5,5,5,]),'expression':([11,12,14,17,21,22,23,24,25,33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,97,],[20,30,32,35,58,59,60,61,62,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,102,]),'id_list':([31,],[64,]),'expression_list':([33,],[67,]),'expression_list_B':([33,],[69,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','hmwk_04.py',198),
  ('statement -> ID ASSIGN expression','statement',3,'p_statement_assign','hmwk_04.py',206),
  ('statement -> BREAK','statement',1,'p_statement_break','hmwk_04.py',211),
  ('statement -> CONTINUE','statement',1,'p_statement_continue','hmwk_04.py',218),
  ('statement -> INT ID','statement',2,'p_statement_declaration','hmwk_04.py',225),
  ('statement -> REAL ID','statement',2,'p_statement_declaration','hmwk_04.py',226),
  ('statement -> INT ID ASSIGN expression','statement',4,'p_initializer_opt','hmwk_04.py',239),
  ('statement -> REAL ID ASSIGN expression','statement',4,'p_initializer_opt','hmwk_04.py',240),
  ('statement -> EXIT','statement',1,'p_statement_exit_A','hmwk_04.py',253),
  ('statement -> EXIT expression','statement',2,'p_statement_exit_B','hmwk_04.py',262),
  ('statement -> IF expression THEN statement_list END IF','statement',6,'p_statement_if','hmwk_04.py',272),
  ('statement -> IF expression THEN statement_list ELSE statement_list END IF','statement',8,'p_else_opt','hmwk_04.py',298),
  ('statement -> READ LPAREN id_list RPAREN','statement',4,'p_statement_read','hmwk_04.py',318),
  ('statement -> WHILE expression DO statement_list END WHILE','statement',6,'p_statement_while','hmwk_04.py',326),
  ('statement -> WRITE LPAREN expression_list RPAREN','statement',4,'p_statement_write','hmwk_04.py',336),
  ('expression -> expression AND_BITWISE expression','expression',3,'p_expression_binop','hmwk_04.py',344),
  ('expression -> expression AND_LOGICAL expression','expression',3,'p_expression_binop','hmwk_04.py',345),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','hmwk_04.py',346),
  ('expression -> expression EQUAL expression','expression',3,'p_expression_binop','hmwk_04.py',347),
  ('expression -> expression EXPONENTIATION expression','expression',3,'p_expression_binop','hmwk_04.py',348),
  ('expression -> expression GREATER expression','expression',3,'p_expression_binop','hmwk_04.py',349),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression_binop','hmwk_04.py',350),
  ('expression -> expression LESS expression','expression',3,'p_expression_binop','hmwk_04.py',351),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression_binop','hmwk_04.py',352),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','hmwk_04.py',353),
  ('expression -> expression MODULUS expression','expression',3,'p_expression_binop','hmwk_04.py',354),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binop','hmwk_04.py',355),
  ('expression -> expression NOT_EQUAL expression','expression',3,'p_expression_binop','hmwk_04.py',356),
  ('expression -> expression OR_BITWISE expression','expression',3,'p_expression_binop','hmwk_04.py',357),
  ('expression -> expression OR_LOGICAL expression','expression',3,'p_expression_binop','hmwk_04.py',358),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','hmwk_04.py',359),
  ('expression -> expression RANDOM expression','expression',3,'p_expression_binop','hmwk_04.py',360),
  ('expression -> expression XOR_BITWISE expression','expression',3,'p_expression_binop','hmwk_04.py',361),
  ('expression -> MINUS expression','expression',2,'p_expression_unop_prefix','hmwk_04.py',412),
  ('expression -> PLUS expression','expression',2,'p_expression_unop_prefix','hmwk_04.py',413),
  ('expression -> NOT_BITWISE expression','expression',2,'p_expression_unop_prefix','hmwk_04.py',414),
  ('expression -> NOT_LOGICAL expression','expression',2,'p_expression_unop_prefix','hmwk_04.py',415),
  ('expression -> expression FACTORIAL','expression',2,'p_expression_unop_suffix','hmwk_04.py',426),
  ('expression -> expression SQUARE_ROOT','expression',2,'p_expression_unop_suffix','hmwk_04.py',427),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','hmwk_04.py',434),
  ('expression -> INTEGER_LITERAL','expression',1,'p_expression_literal','hmwk_04.py',438),
  ('expression -> REAL_LITERAL','expression',1,'p_expression_literal','hmwk_04.py',439),
  ('expression -> STRING_LITERAL','expression',1,'p_expression_literal','hmwk_04.py',440),
  ('expression -> ID','expression',1,'p_expression_name','hmwk_04.py',450),
  ('expression_list -> epsilon','expression_list',1,'p_expression_list_A1','hmwk_04.py',458),
  ('expression_list -> expression_list_B','expression_list',1,'p_expression_list_A2','hmwk_04.py',462),
  ('expression_list_B -> expression','expression_list_B',1,'p_expression_list_B1','hmwk_04.py',466),
  ('expression_list_B -> expression_list_B COMMA expression','expression_list_B',3,'p_expression_list_B2','hmwk_04.py',470),
  ('id_list -> ID','id_list',1,'p_id_list_A','hmwk_04.py',476),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list_B','hmwk_04.py',480),
  ('statement_list -> epsilon','statement_list',1,'p_statement_list_A1','hmwk_04.py',486),
  ('statement_list -> statement_list_C','statement_list',1,'p_statement_list_A2','hmwk_04.py',490),
  ('statement_list_C -> statement','statement_list_C',1,'p_statement_list_C1','hmwk_04.py',494),
  ('statement_list_C -> statement_list_C SEMICOLON statement','statement_list_C',3,'p_statement_list_C2','hmwk_04.py',498),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','hmwk_04.py',507),
]
